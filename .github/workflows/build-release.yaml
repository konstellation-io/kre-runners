name: Publish Docker image

on:
  push:
    tags:
      - '**'

jobs:
  new-release:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: Get image tag and Dockerfile folder
        id: tag-folder
        run: |
          TAG=${GITHUB_REF_NAME}
          DOCKERFILE_FOLDER=${TAG%/v*}
          IMAGE_TAG=${TAG##*/v}
          echo "FOLDER=${DOCKERFILE_FOLDER}" >> ${GITHUB_OUTPUT}
          echo "IMAGE_TAG=${IMAGE_TAG}" >> ${GITHUB_OUTPUT}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: ${{ runner.os }}-buildx-

      - name: Login to DockerHub Registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Push to Docker Hub
        uses: docker/build-push-action@v3
        with:
          context: ./backup/${{ steps.tag-folder.outputs.FOLDER }}
          file: ./backup/${{ steps.tag-folder.outputs.FOLDER }}/Dockerfile
          platforms: linux/amd64
          push: true
          tags: |
            konstellation/${{ steps.tag-folder.outputs.FOLDER }}:${{ steps.tag-folder.outputs.IMAGE_TAG }}
            konstellation/${{ steps.tag-folder.outputs.FOLDER }}:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
