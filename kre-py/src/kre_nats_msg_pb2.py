# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: kre_nats_msg.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import any_pb2 as google_dot_protobuf_dot_any__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x12kre_nats_msg.proto\x1a\x19google/protobuf/any.proto\"\x91\x01\n\x0eKreNatsMessage\x12\x12\n\nrequest_id\x18\x01 \x01(\t\x12%\n\x07payload\x18\x02 \x01(\x0b\x32\x14.google.protobuf.Any\x12\r\n\x05\x65rror\x18\x03 \x01(\t\x12\x11\n\tfrom_node\x18\x04 \x01(\t\x12\"\n\x0cmessage_type\x18\x05 \x01(\x0e\x32\x0c.MessageType*P\n\x0bMessageType\x12\r\n\tUNDEFINED\x10\x00\x12\x06\n\x02OK\x10\x01\x12\t\n\x05\x45RROR\x10\x02\x12\x0f\n\x0b\x45\x41RLY_REPLY\x10\x03\x12\x0e\n\nEARLY_EXIT\x10\x04\x42\x07Z\x05./kreb\x06proto3')

_MESSAGETYPE = DESCRIPTOR.enum_types_by_name['MessageType']
MessageType = enum_type_wrapper.EnumTypeWrapper(_MESSAGETYPE)
UNDEFINED = 0
OK = 1
ERROR = 2
EARLY_REPLY = 3
EARLY_EXIT = 4


_KRENATSMESSAGE = DESCRIPTOR.message_types_by_name['KreNatsMessage']
KreNatsMessage = _reflection.GeneratedProtocolMessageType('KreNatsMessage', (_message.Message,), {
  'DESCRIPTOR' : _KRENATSMESSAGE,
  '__module__' : 'kre_nats_msg_pb2'
  # @@protoc_insertion_point(class_scope:KreNatsMessage)
  })
_sym_db.RegisterMessage(KreNatsMessage)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'Z\005./kre'
  _MESSAGETYPE._serialized_start=197
  _MESSAGETYPE._serialized_end=277
  _KRENATSMESSAGE._serialized_start=50
  _KRENATSMESSAGE._serialized_end=195
# @@protoc_insertion_point(module_scope)
