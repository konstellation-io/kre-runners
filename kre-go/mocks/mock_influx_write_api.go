// Code generated by MockGen. DO NOT EDIT.
// Source: write.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	write "github.com/influxdata/influxdb-client-go/api/write"
)

// MockWriteAPI is a mock of WriteAPI interface.
type MockWriteAPI struct {
	ctrl     *gomock.Controller
	recorder *MockWriteAPIMockRecorder
}

// MockWriteAPIMockRecorder is the mock recorder for MockWriteAPI.
type MockWriteAPIMockRecorder struct {
	mock *MockWriteAPI
}

// NewMockWriteAPI creates a new mock instance.
func NewMockWriteAPI(ctrl *gomock.Controller) *MockWriteAPI {
	mock := &MockWriteAPI{ctrl: ctrl}
	mock.recorder = &MockWriteAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWriteAPI) EXPECT() *MockWriteAPIMockRecorder {
	return m.recorder
}

// Close mocks base method.
func (m *MockWriteAPI) Close() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Close")
}

// Close indicates an expected call of Close.
func (mr *MockWriteAPIMockRecorder) Close() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Close", reflect.TypeOf((*MockWriteAPI)(nil).Close))
}

// Errors mocks base method.
func (m *MockWriteAPI) Errors() <-chan error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Errors")
	ret0, _ := ret[0].(<-chan error)
	return ret0
}

// Errors indicates an expected call of Errors.
func (mr *MockWriteAPIMockRecorder) Errors() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Errors", reflect.TypeOf((*MockWriteAPI)(nil).Errors))
}

// Flush mocks base method.
func (m *MockWriteAPI) Flush() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Flush")
}

// Flush indicates an expected call of Flush.
func (mr *MockWriteAPIMockRecorder) Flush() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Flush", reflect.TypeOf((*MockWriteAPI)(nil).Flush))
}

// WritePoint mocks base method.
func (m *MockWriteAPI) WritePoint(point *write.Point) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "WritePoint", point)
}

// WritePoint indicates an expected call of WritePoint.
func (mr *MockWriteAPIMockRecorder) WritePoint(point interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WritePoint", reflect.TypeOf((*MockWriteAPI)(nil).WritePoint), point)
}

// WriteRecord mocks base method.
func (m *MockWriteAPI) WriteRecord(line string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "WriteRecord", line)
}

// WriteRecord indicates an expected call of WriteRecord.
func (mr *MockWriteAPIMockRecorder) WriteRecord(line interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WriteRecord", reflect.TypeOf((*MockWriteAPI)(nil).WriteRecord), line)
}
